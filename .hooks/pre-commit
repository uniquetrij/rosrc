#!/bin/bash
# =============================================================================
# Git Pre-Commit Hook
# -----------------------------------------------------------------------------
# This script automatically updates the version, date, and the current commit
# hash in the specified file before every commit. It ensures that the script
# metadata remains up-to-date with each change.
#
# Author: Trijeet Modak
# Date: April 26, 2025
# =============================================================================

if [ -z "$GIT_DIR" ] && [ ! -d ".git" ] || [ -z "$GIT_INDEX_FILE" ]; then
    echo "Error: This script is intended to be run as a Git pre-commit hook."
    exit 1
fi

echo "Running pre-commit hook..."

FILE="rosrc"
VERSION_LINE=$(grep -n "Version:" "$FILE" | head -n 1 | cut -d: -f1)
DATE_LINE=$(grep -n "Date:" "$FILE" | head -n 1 | cut -d: -f1)

# Update the version
if [ -n "$VERSION_LINE" ]; then
    CURRENT_VERSION=$(sed -n "${VERSION_LINE}p" "$FILE" | grep -oP '\d+\.\d+\.\d+')
    MAJOR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
    MINOR=$(echo "$CURRENT_VERSION" | cut -d. -f2)
    PATCH=$(echo "$CURRENT_VERSION" | cut -d. -f3)

    # Increment the patch version
    PATCH=$((PATCH + 1))
    NEW_VERSION="$MAJOR.$MINOR.$PATCH"

    # Replace the version in the file
    sed -i "${VERSION_LINE}s/$CURRENT_VERSION/$NEW_VERSION/" "$FILE"
    echo "Updated version to $NEW_VERSION"
else
    echo "Version line not found in $FILE"
    exit 1
fi

# Update the date
if [ -n "$DATE_LINE" ]; then
    NEW_DATE=$(date +"%B %d, %Y")
    sed -i "${DATE_LINE}s/Date: .*/Date: $NEW_DATE/" "$FILE"
    echo "Updated date to $NEW_DATE"
else
    echo "Date line not found in $FILE"
    exit 1
fi

# Add the updated file to the commit
git add "$FILE"
